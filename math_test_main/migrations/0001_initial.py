# Generated by Django 3.0.5 on 2020-05-02 15:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_access', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='SetOfTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Сет с задачами',
                'verbose_name_plural': 'Сеты с задачами',
            },
        ),
        migrations.CreateModel(
            name='TestTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='math_test_main.Profile')),
            ],
            options={
                'verbose_name': 'Шаблон теста',
                'verbose_name_plural': 'Шаблоны тестов',
            },
        ),
        migrations.CreateModel(
            name='TestItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='math_test_main.Profile')),
                ('template_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='math_test_main.TestTemplate')),
            ],
            options={
                'verbose_name': 'Экземпляр теста',
                'verbose_name_plural': 'Экземпляры тестов',
            },
        ),
        migrations.CreateModel(
            name='TaskItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('score', models.SmallIntegerField()),
                ('comment', models.TextField()),
                ('index', models.PositiveSmallIntegerField()),
                ('test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='math_test_main.TestItem')),
            ],
            options={
                'verbose_name': 'Решение ученика',
                'verbose_name_plural': 'Решения учеников',
            },
        ),
        migrations.CreateModel(
            name='Set2Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField()),
                ('set_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='math_test_main.SetOfTasks')),
                ('test_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='math_test_main.TestTemplate')),
            ],
            options={
                'verbose_name': 'тип задач в тесте',
                'verbose_name_plural': 'типы задач в тестах',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem', models.TextField()),
                ('answer', models.TextField()),
                ('set', models.ManyToManyField(to='math_test_main.SetOfTasks')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
        ),
    ]
